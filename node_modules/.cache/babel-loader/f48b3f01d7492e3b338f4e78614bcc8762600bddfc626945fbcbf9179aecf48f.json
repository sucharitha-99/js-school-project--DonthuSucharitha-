{"ast":null,"code":"var _jsxFileName = \"/Users/sucharitha/Desktop/DataArt/Task5/timeline/src/components/Timeline.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport EventMarker from \"./EventMarker\";\nimport EventModal from \"./EventModal\";\nimport eventsData from \"../../public/events.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timeline = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  useEffect(() => {\n    setEvents(eventsData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"timeline-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date\",\n        children: events.map(event => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: event.year\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dots-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dots-row\",\n        children: events.map(event => /*#__PURE__*/_jsxDEV(EventMarker, {\n          event: event,\n          onClick: setSelectedEvent\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timeline\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-event\",\n        onClick: () => setSelectedEvent(event),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: event.image,\n          alt: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: event.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventModal, {\n      event: selectedEvent,\n      onClose: () => setSelectedEvent(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"KbW+g4Hsq7LsWSFUvkuBEaLEVeY=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useEffect","useState","EventMarker","EventModal","eventsData","jsxDEV","_jsxDEV","Timeline","_s","events","setEvents","selectedEvent","setSelectedEvent","id","children","className","map","event","year","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","src","image","alt","description","onClose","_c","$RefreshReg$"],"sources":["/Users/sucharitha/Desktop/DataArt/Task5/timeline/src/components/Timeline.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { EventData } from \"../type\";\nimport EventMarker from \"./EventMarker\";\nimport EventModal from \"./EventModal\";\nimport eventsData from \"../../public/events.json\";\n\nconst Timeline: React.FC = () => {\n  const [events, setEvents] = useState<EventData[]>([]);\n  const [selectedEvent, setSelectedEvent] = useState<EventData | null>(null);\n\n  useEffect(() => {\n    setEvents(eventsData);\n  }, []);\n\n  return (\n    <section id=\"timeline-container\">\n      <div className=\"date-container\">\n        <div className=\"date\">\n          {events.map(event => (\n            <span key={event.id}>{event.year}</span>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"dots-container\">\n        <div className=\"dots-row\">\n          {events.map(event => (\n            <EventMarker key={event.id} event={event} onClick={setSelectedEvent} />\n          ))}\n        </div>\n      </div>\n\n      <div id=\"timeline\">\n        {events.map(event => (\n          <div key={event.id} className=\"timeline-event\" onClick={() => setSelectedEvent(event)}>\n            <h3>{event.title}</h3>\n            <img src={event.image} alt={event.title} />\n            <p>{event.description}</p>\n            <span>{event.year}</span>\n          </div>\n        ))}\n      </div>\n\n      <EventModal event={selectedEvent} onClose={() => setSelectedEvent(null)} />\n    </section>\n  );\n};\n\nexport default Timeline;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAc,EAAE,CAAC;EACrD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAmB,IAAI,CAAC;EAE1ED,SAAS,CAAC,MAAM;IACdU,SAAS,CAACN,UAAU,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEE,OAAA;IAASO,EAAE,EAAC,oBAAoB;IAAAC,QAAA,gBAC9BR,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BR,OAAA;QAAKS,SAAS,EAAC,MAAM;QAAAD,QAAA,EAClBL,MAAM,CAACO,GAAG,CAACC,KAAK,iBACfX,OAAA;UAAAQ,QAAA,EAAsBG,KAAK,CAACC;QAAI,GAArBD,KAAK,CAACJ,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENhB,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BR,OAAA;QAAKS,SAAS,EAAC,UAAU;QAAAD,QAAA,EACtBL,MAAM,CAACO,GAAG,CAACC,KAAK,iBACfX,OAAA,CAACJ,WAAW;UAAgBe,KAAK,EAAEA,KAAM;UAACM,OAAO,EAAEX;QAAiB,GAAlDK,KAAK,CAACJ,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4C,CACvE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENhB,OAAA;MAAKO,EAAE,EAAC,UAAU;MAAAC,QAAA,EACfL,MAAM,CAACO,GAAG,CAACC,KAAK,iBACfX,OAAA;QAAoBS,SAAS,EAAC,gBAAgB;QAACQ,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACK,KAAK,CAAE;QAAAH,QAAA,gBACpFR,OAAA;UAAAQ,QAAA,EAAKG,KAAK,CAACO;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBhB,OAAA;UAAKmB,GAAG,EAAER,KAAK,CAACS,KAAM;UAACC,GAAG,EAAEV,KAAK,CAACO;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3ChB,OAAA;UAAAQ,QAAA,EAAIG,KAAK,CAACW;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BhB,OAAA;UAAAQ,QAAA,EAAOG,KAAK,CAACC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAJjBL,KAAK,CAACJ,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENhB,OAAA,CAACH,UAAU;MAACc,KAAK,EAAEN,aAAc;MAACkB,OAAO,EAAEA,CAAA,KAAMjB,gBAAgB,CAAC,IAAI;IAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEd,CAAC;AAACd,EAAA,CAxCID,QAAkB;AAAAuB,EAAA,GAAlBvB,QAAkB;AA0CxB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}