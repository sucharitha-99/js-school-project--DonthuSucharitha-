{"ast":null,"code":"var _jsxFileName = \"/Users/sucharitha/Desktop/DataArt/Task5/timeline/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Timeline from \"./components/Timeline\";\nimport EventModal from \"./components/EventModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const toggleTheme = () => setIsDarkTheme(prev => !prev);\n  useEffect(() => {\n    fetch(\"/events.json\").then(res => res.json()).then(data => {\n      setEvents(data);\n      if (data.length > 0) setSelectedEvent(data[0]);\n    }).catch(err => console.error(\"Error loading events:\", err));\n  }, []);\n  if (events.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading events...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDarkTheme ? \"dark-theme\" : \"light-theme\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onToggleTheme: toggleTheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timeline, {\n      events: events,\n      onSelectEvent: setSelectedEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventModal, {\n      event: selectedEvent,\n      onClose: () => setSelectedEvent(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"g//ICObURjUxQ5N+dYg/1nWuc8A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Timeline","EventModal","jsxDEV","_jsxDEV","App","_s","events","setEvents","selectedEvent","setSelectedEvent","isDarkTheme","setIsDarkTheme","toggleTheme","prev","fetch","then","res","json","data","length","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onToggleTheme","onSelectEvent","event","onClose","_c","$RefreshReg$"],"sources":["/Users/sucharitha/Desktop/DataArt/Task5/timeline/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Timeline from \"./components/Timeline\";\nimport EventModal from \"./components/EventModal\";\nimport { Event } from \"./types\";\n\nconst App: React.FC = () => {\n  const [events, setEvents] = useState<Event[]>([]);\n  const [selectedEvent, setSelectedEvent] = useState<Event | null>(null);\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n  const toggleTheme = () => setIsDarkTheme((prev) => !prev);\n\n  useEffect(() => {\n    fetch(\"/events.json\")\n      .then((res) => res.json())\n      .then((data: Event[]) => {\n        setEvents(data);\n        if (data.length > 0) setSelectedEvent(data[0]);\n      })\n      .catch((err) => console.error(\"Error loading events:\", err));\n  }, []);\n\n  if (events.length === 0) return <p>Loading events...</p>;\n\n  return (\n    <div className={isDarkTheme ? \"dark-theme\" : \"light-theme\"}>\n      <Header onToggleTheme={toggleTheme} />\n      <Timeline events={events} onSelectEvent={setSelectedEvent} />\n      <EventModal event={selectedEvent} onClose={() => setSelectedEvent(null)} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAe,IAAI,CAAC;EACtE,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMe,WAAW,GAAGA,CAAA,KAAMD,cAAc,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAEzDf,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,cAAc,CAAC,CAClBC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAa,IAAK;MACvBX,SAAS,CAACW,IAAI,CAAC;MACf,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAEV,gBAAgB,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIf,MAAM,CAACa,MAAM,KAAK,CAAC,EAAE,oBAAOhB,OAAA;IAAAqB,QAAA,EAAG;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAExD,oBACEzB,OAAA;IAAK0B,SAAS,EAAEnB,WAAW,GAAG,YAAY,GAAG,aAAc;IAAAc,QAAA,gBACzDrB,OAAA,CAACJ,MAAM;MAAC+B,aAAa,EAAElB;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtCzB,OAAA,CAACH,QAAQ;MAACM,MAAM,EAAEA,MAAO;MAACyB,aAAa,EAAEtB;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DzB,OAAA,CAACF,UAAU;MAAC+B,KAAK,EAAExB,aAAc;MAACyB,OAAO,EAAEA,CAAA,KAAMxB,gBAAgB,CAAC,IAAI;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1BID,GAAa;AAAA8B,EAAA,GAAb9B,GAAa;AA4BnB,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}